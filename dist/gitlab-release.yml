stages:
  - build
  - repoupload
  - deploy

variables:
  CMAKE_INTERPROCEDURAL_OPTIMIZATION: 1
  VERBOSE: 1
  DIAGNOSTIC: 1

start:
  stage: build
  script:
    - echo "Build started."

.redhat_based:
  stage: build
  interruptible: true
  variables:
    REPO_DIST_NAME: "centos"
    CACHEB: "../cache"
  tags:
    - docker
  before_script:
    - mc config host add dev $MINIO_HOST
  script:
    - ln -s $(pwd) /manticore012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789/src
    - cd /manticore012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789/src
    - mc mirror -a dev/runner-cache/releases/$DISTR/ cache/
    - mkdir build && cd build
    - cmake -GNinja -DPACK=1 -DBUILD_TAG=$RELEASE_TAG $XTRAFLAGS ..
    - cmake --build . --target package
    - cmake -DSPLIT=1 .
    - cmake --build . --target package
    - cp manticore*.rpm ..
    - cd ..
    - mc mirror --overwrite -a cache/ dev/runner-cache/releases/$DISTR/
  artifacts:
    paths:
      - manticore*.rpm
    when: on_success
    expire_in: 12 hrs

.debian_based:
  stage: build
  interruptible: true
  tags:
    - docker
  variables:
    CACHEB: "../cache"
  before_script:
    - mc config host add dev $MINIO_HOST
  script:
    - mc mirror dev/runner-cache/releases/$DISTR/ cache/
    - mkdir build && cd build
    - cmake -GNinja -DPACK=1 -DBUILD_TAG=$RELEASE_TAG $XTRAFLAGS ..
    - cmake --build . --target package
    - cmake -DSPLIT=1 .
    - cmake --build . --target package
    - cp manticore*deb ..
    - cd ..
    - mc mirror --overwrite cache/ dev/runner-cache/releases/$DISTR/
  artifacts:
    paths:
      - manticore*deb
    when: on_success
    expire_in: 12 hrs

.collect_job:
  variables:
    GIT_STRATEGY: none
  stage: repoupload
  interruptible: true
  tags:
    - dev-host

osx:
  stage: build
  interruptible: true
  retry: 1
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /osx/
  needs: []
  variables:
    CACHEB: "../cache"
    LIBS_BUNDLE: "/work"
    OPENSSL_ROOT_DIR: "/usr/local/opt/openssl"
  tags:
    - mac
    - build
  script:
    - mkdir build && cd build
    - cmake .. -GNinja -DDISTR_BUILD=macos -DBUILD_TAG=$RELEASE_TAG
    - cmake --build . --target package
    - cp manticore-*.tar.gz ..
  artifacts:
    paths:
      - manticore-*.tar.gz
    when: on_success
    expire_in: 12 hrs
  cache:
    key: mojave
    paths:
      - cache

collect_osx:
  extends: [ .collect_job ]
  needs: [ osx ]
  script: [ ~/upload_repo_arc.sh ]

windows:
  stage: build
  interruptible: true
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /windows/
  tags:
    - windev19
    - build
  variables:
    LIBS_BUNDLE: "x:/bundle"
    CACHEB: "x:/cache"
    BOOST_ROOT: "x:/boost_1_75_0"
  script:
    - 'net use x: \\\\VBOXSRV\\shared'
    - mkdir sphinxbin-x64
    - cd sphinxbin-x64
    - cmake -DBUILD_TAG=$RELEASE_TAG -DDISTR_BUILD=default -DWITH_SSL=1 ..
    - cmake --build . --target package --config RelWithDebInfo
    - cp manticore-*.zip ..
  artifacts:
    paths:
      - manticore-*.zip
    when: on_success
    expire_in: 12 hrs
  cache: {}

collect_windows:
  extends: [ .collect_job ]
  needs: [ windows ]
  script: [ ~/upload_repo_arc.sh ]

rhel7:
  extends: [ .redhat_based ]
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /rhel7/
  variables:
    REPO_DIST_VER: "7"
  image: registry.gitlab.com/manticoresearch/dev/centos7_cmake:320

collect_rhel7:
  extends: [ .collect_job ]
  script: [ ~/upload_repo_rpm.sh ]
  variables:
    DISTRO: 7
  needs: [ rhel7 ]


rhelsplit7:
  extends: [ .redhat_based ]
  rules:
    - if: $WHAT =~ /rhelsplit7/
  variables:
    XTRAFLAGS: "-DSPLIT_APPS=ON -DNOAPI=ON"
    REPO_DIST_VER: "7"
  image: registry.gitlab.com/manticoresearch/dev/centos7_cmake:320

collect_rhelsplit7:
  extends: [ .collect_job ]
  script: [ ~/upload_repo_rpm.sh ]
  variables:
    DISTRO: 7
  needs:
    - job: rhelsplit7
      optional: true

rhel8:
  extends: [ .redhat_based ]
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /rhel8/
  variables:
    REPO_DIST_VER: "8"
  image: registry.gitlab.com/manticoresearch/dev/centos8_cmake:320

collect_rhel8:
  extends: [ .collect_job ]
  script: [ ~/upload_repo_rpm.sh ]
  variables:
    DISTRO: 8
  needs: [ rhel8 ]

stretch:
  extends: [ .debian_based ]
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /stretch/
  image: registry.gitlab.com/manticoresearch/dev/stretch_cmake:320

collect_stretch:
  extends: [ .collect_job ]
  script: [ ~/upload_repo_deb.sh ]
  variables:
    DISTRO: stretch
  needs: [ stretch ]


xenial:
  extends: [ .debian_based ]
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /xenial/
  image: registry.gitlab.com/manticoresearch/dev/xenial_cmake:320

collect_xenial:
  extends: [ .collect_job ]
  script: [ ~/upload_repo_deb.sh ]
  variables:
    DISTRO: xenial
  needs: [ xenial ]


bionic:
  extends: [ .debian_based ]
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /bionic/
  image: registry.gitlab.com/manticoresearch/dev/bionic_cmake:320

collect_bionic:
  extends: [ .collect_job ]
  script: [ ~/upload_repo_deb.sh ]
  variables:
    DISTRO: bionic
  needs: [ bionic ]


focal:
  extends: [ .debian_based ]
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /focal/
  image: registry.gitlab.com/manticoresearch/dev/focal_cmake:320

focalarm:
  stage: build
  interruptible: true
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /focalarm/
  tags:
    - arm64
    - focal
  variables:
    CACHEB: "../cache"
    DIAGNOSTIC: 1 # let's set it by default forever
  script:
    - mkdir build && cd build
    - cmake -GNinja -DPACK=1 -DBUILD_TAG=$RELEASE_TAG $XTRAFLAGS ..
    - cmake --build . --target package
    - cmake -DSPLIT=1 .
    - cmake --build . --target package
    - cp manticore*deb ..
  artifacts:
    paths:
      - manticore*deb
    when: on_success
    expire_in: 12 hrs
  cache:
    key: focalarm
    paths:
      - cache

collect_focal:
  extends: [ .collect_job ]
  script: [ ~/upload_repo_deb.sh ]
  variables:
    DISTRO: focal
  needs: [ focal focalarm ]

buster:
  extends: [ .debian_based ]
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /buster/
  image: registry.gitlab.com/manticoresearch/dev/buster_cmake:320

collect_buster:
  extends: [ .collect_job ]
  script: [ ~/upload_repo_deb.sh ]
  variables:
    DISTRO: buster
  needs: [ buster ]

build_docker:
  stage: deploy
  needs: [ collect_bionic ]
  interruptible: true
  variables:
    GIT_STRATEGY: none
  rules:
    - if: $REPO_NAME=='$REPO_NAME' || $WHAT=='$WHAT'
    - if: $WHAT==null && $CI_COMMIT_BRANCH == "master"
  tags:
    - dev-host
  script:
    - echo "Build docker image"
    - ~/build.sh
