<?xml version="1.0" encoding="utf-8"?>
<test>
<name>plain idx without ft fields</name>

<requires>
	<force-rt/>
</requires>

<config>
indexer
{
	mem_limit			= 32M
}

source srctest1
{
	type = mysql
	<sql_settings/>
	sql_query = SELECT id, idd FROM test_tablei
	sql_attr_uint = idd
}

source srctest2
{
    type = mysql
    <sql_settings/>
	sql_query = SELECT id, str FROM test_tables
	sql_attr_string = str
}

source srctest3
{
    type = mysql
    <sql_settings/>
	sql_query = SELECT id, str FROM test_tables
}

source srcc
{
    type = csvpipe
    csvpipe_command = cat <this_test/>/data1.csv
    csvpipe_attr_string = str
    csvpipe_attr_uint = idd
    csvpipe_attr_string = str1
}

source srct
{
    type = tsvpipe
    tsvpipe_command = cat <this_test/>/data1.tsv
    tsvpipe_attr_string = str
    tsvpipe_attr_uint = idd
    tsvpipe_attr_string = str1
}

source src1
{
	type = xmlpipe2
	xmlpipe_command = cat <this_test/>/data1.xml
}

source src2
{
	type = xmlpipe2
	xmlpipe_command = cat <this_test/>/data2.xml
}

source src3
{
	type = xmlpipe2
	xmlpipe_command = cat <this_test/>/data3.xml
}

source src4
{
	type = xmlpipe2
	xmlpipe_command = cat <this_test/>/data4.xml
    xmlpipe_attr_string = str
}

index test1
{
    source = srctest1
	path =<data_path/>/test1
}

index test2
{
    source = srctest2
    path =<data_path/>/test2
}

index test3
{
    source = srctest3
    path =<data_path/>/test3
    stored_only_fields = str
}

index testcsv
{
    source = srcc
    path =<data_path/>/testcsv
}

index testtsv
{
    source = srct
    path =<data_path/>/testtsv
}

index test1x
{
    source = src1
	path =<data_path/>/test1x
}

index test2x
{
    source = src2
    path =<data_path/>/test2x
}

index test3x
{
    source = src3
    path =<data_path/>/test3x
    stored_only_fields = str
}

index test4x
{
    source = src4
    path =<data_path/>/test4x
}

searchd
{
	<searchd_Settings/>
}
</config>

<db_create> CREATE TABLE test_tablei ( id integer primary key not null auto_increment, idd int ) </db_create>
<db_drop> DROP TABLE IF EXISTS test_tablei</db_drop>
<db_insert> INSERT INTO test_tablei (idd) VALUES (1),(2),(3),(4),(5)</db_insert>

<db_create> CREATE TABLE test_tables ( id integer primary key not null auto_increment, str varchar(20) NOT NULL ) </db_create>
<db_drop> DROP TABLE IF EXISTS test_tables</db_drop>
<db_insert> INSERT INTO test_tables (str) VALUES ('bla'),('ble'),('bli'),('blo'),('blu')</db_insert>

<metaindex name='META:all'>
    <index>test1</index>
    <index>test2</index>
    <index>test3</index>
    <index>testcsv</index>
    <index>testtsv</index>
    <index>test1x</index>
    <index>test2x</index>
    <index>test3x</index>
    <index>test4x</index>
</metaindex>

<queries>
<sphinxql>
    show tables;
    desc META:all;
    select count(*) from META:all;
    SELECT * FROM META:all order by id asc;
</sphinxql>
</queries>

</test>
