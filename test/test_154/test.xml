<?xml version="1.0" encoding="utf-8"?>
<test>

<name>no hit documents in RT and plain index</name>

<config>
indexer
{
	mem_limit		= 16M
}

searchd
{
	<searchd_settings/>
}

source src
{
	type			= mysql
	<sql_settings/>

	sql_query		= SELECT id, idd1, body FROM test_table
	sql_attr_uint	= idd1
}

index plain
{
	source			= src
	path			= <data_path/>/plain
	stopwords		= <this_test/>/stopwords.txt
	blend_chars = .
	blend_mode = trim_both, trim_head	
}

index rt
{
	type			= rt
	path			= <data_path/>/rt
	stopwords		= <this_test/>/stopwords.txt

	rt_attr_uint	= idd1
	rt_field		= body
	
	rt_mem_limit	= 8M 
}

index both
{
	type	= distributed
	local	= plain
	local	= rt
}

</config>

<db_create>
CREATE TABLE `test_table`
(
	`id` int(11) NOT NULL default '0',
	`idd1` int(11) NOT NULL default '0',
	`body` varchar(1024) NOT NULL default ''
)
</db_create>

<db_drop>
DROP TABLE IF EXISTS `test_table`
</db_drop>

<db_insert>
INSERT INTO `test_table` VALUES
( 1, 11, 'a dog.' ),
( 2, 11, 'a cat' ),
( 3, 11, 'a bird' ), 
( 4, 12, 'cat eats bird' ),
( 5, 13, 'dog eats cat' ), 
( 6, 14, 'bird' )
</db_insert>

<queries><sphinxql>
insert into rt (id, idd1, body) values ( 11, 14, 'bird' );
insert into rt (id, idd1, body) values ( 12, 13, 'dog eats cat' );
insert into rt (id, idd1, body) values ( 13, 12, 'cat eats bird' );
insert into rt (id, idd1, body) values ( 14, 11, 'a bird' );
insert into rt (id, idd1, body) values ( 15, 11, 'a cat' );
insert into rt (id, idd1, body) values ( 16, 11, 'a dog' );

select * from plain;
select * from rt order by id asc;
select * from both order by id asc;
select * from both where match ('a');
select * from both where match ('bird') order by weight() desc, id asc;
select * from both where idd1=11 order by id asc;
select * from both where idd1!=11 order by id asc;
select * from both where match ('bird') and idd1!=11 order by weight() desc, id asc;
select * from both where idd1!=10 order by id asc;

<!-- regression stopwords missed on disk chunk save (either regular or forced) -->
flush ramchunk rt;
select * from rt where match ('a bird') order by weight() desc, id asc;
call keywords ('a bird', 'rt', 1);
</sphinxql></queries>

</test>
