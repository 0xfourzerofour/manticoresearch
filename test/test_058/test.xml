<?xml version="1.0" encoding="utf-8"?>

<test>
<name>rotation</name>

<requires>
<non-rt/>
<heavy />
</requires>

<config>
searchd
{
	<searchd_settings/>
	expansion_limit = 2
	shutdown_timeout = 30s
	<dynamic>
		<variant>
			seamless_rotate = 0
		</variant>
		<variant>
			seamless_rotate = 0
			binlog_path =
		</variant>
		<variant>
			binlog_path =
			preopen_indexes = 1
			seamless_rotate = 0
		</variant>
		<variant>
			binlog_path =
			preopen_indexes = 1
			seamless_rotate = 1
		</variant>
	</dynamic>
}

source sql
{
	type = mysql
	<sql_settings/>

	sql_query = select id, text from test_table where mode = (select mode from test_table where id = 1000);
}

index index
{
	source = sql
	path = <data_path/>/index
}

source locs
{
	type = mysql
	<sql_settings/>

	sql_query = select id, text from test_table;
}

index loc1
{
	source = locs
	path = <data_path/>/loc1
}

index loc2
{
	source = locs
	path = <data_path/>/loc2
}

index loc3
{
	source = locs
	path = <data_path/>/loc3
}

source src_expand
{
	type = mysql
	<sql_settings/>
	sql_query = select 1, 'as' text UNION select 2, 'ask as' text UNION select 3, 'all' text UNION select 4, 'after ask' text
}

index expand
{
	source = src_expand
	path = <data_path/>/expand
	dict = keywords
	min_prefix_len = 1
}

source src_attrs
{
	type = mysql
	<sql_settings/>

	sql_query = select id, text, mode from test_table where mode=1;
	sql_attr_uint = mode
}

index i_attrs
{
	source = src_attrs
	path = <data_path/>/attrs
}

source chain1
{
	type = mysql
	<sql_settings/>

	sql_query = select id, text from test_table;
}

source chain2
{
	type = mysql
	<sql_settings/>

	sql_query = select id, text from test_table;
	sql_query_killlist = select id from klist_table;
}


index main
{
	source = chain1
	path = <data_path/>/chain1
}

index delta
{
	source = chain2
	path = <data_path/>/chain2
	killlist_target = main:kl
}

</config>

<db_drop>drop table if exists test_table;</db_drop>
<db_drop>drop table if exists klist_table;</db_drop>

<db_create>
create table test_table
(
	id int not null,
	text varchar(255) not null,
	mode int
);
</db_create>

<db_create>
create table klist_table
(
	id int not null
);
</db_create>

<db_insert>
insert into test_table values
( 1, 'first',  1 ),
( 2, 'second', 1 ),
( 3, 'third',  1 ),
( 4, 'fourth', 1 ),
( 5, 'fifth',  1 ),
 
( 1, 'one',    2 ),
( 2, 'two',    2 ),
( 3, 'three',  2 ),

( 1000, '', 1 );
</db_insert>

<db_insert>
insert into klist_table values (1);
</db_insert>

<queries>
<sphinxql>
	select *,weight() from index where match ('first');
	select *,weight() from index where match ('one');
	select *,weight() from loc1 where match ('second');select *,weight() from loc2 where match ('fifth');select *,weight() from loc3 where match ('third');
	select *,weight() from expand where match ('a*');show meta;
</sphinxql>
<sphinxql d="mysql"> update test_table set mode=3 where id=1000; </sphinxql>
<sphinxql system="run-indexer" params="--all --rotate" sleep="2" />
<sphinxql>
	select *,weight() from index where match ('first');
	select *,weight() from index where match ('one');
	select *,weight() from loc1 where match ('second');select *,weight() from loc2 where match ('fifth');select *,weight() from loc3 where match ('third');
</sphinxql>
<sphinxql d="mysql">update test_table set mode=2 where id=1000; </sphinxql>
<sphinxql system="run-indexer" params="--all --rotate" sleep="2"/>
<sphinxql>
	select *,weight() from index where match ('first');
	select *,weight() from index where match ('one');
	select *,weight() from loc1 where match ('second');select *,weight() from loc2 where match ('fifth');select *,weight() from loc3 where match ('third');
	select *,weight() from expand where match ('a*');show meta;
</sphinxql>

<!-- regression keep-attrs vs rotate -->
<query mode="update_int" index="i_attrs">{"attrs":["mode"],"values":{"1":[10],"3":[11]}}</query>
<sphinxql>
	select * from i_attrs;
</sphinxql>
<sphinxql system="run-indexer" params="i_attrs --rotate --keep-attrs" sleep="2"/>
<sphinxql>
	select * from i_attrs;
</sphinxql>

<!-- smart rotation order (following a chain of killlist_target) -->
<sphinxql>select *,weight() from main where match ('first');</sphinxql>
<sphinxql d="mysql">delete from klist_table where id=1;</sphinxql>
<sphinxql system="run-indexer" params="main delta --rotate"/>
<sphinxql d="mysql" sleep="2">insert into klist_table values (1);</sphinxql>
<sphinxql>select *,weight() from main where match ('first');</sphinxql>

<!-- regression for indexer crashing on keep-attrs w/o rotate -->
<sphinxql system="run-indexer" params="i_attrs --keep-attrs"/>
</queries>
</test>
