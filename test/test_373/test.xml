<?xml version="1.0" encoding="utf-8"?>
<test>
<name>Indexes autoreload</name>

<config>
indexer
{
	mem_limit	= 32M
}

searchd
{
	<searchd_settings/>
}

source src1
{
	type = mysql
	<sql_settings/>
	sql_query_pre	= SET NAMES utf8
	sql_query 		= SELECT id, 11 idd, text from test_table
	sql_attr_uint 	= idd
}

index idx1
{
	source			= src1
	path			= <data_path/>/idx1
	docinfo			= extern
	dict 			= keywords
}
</config>

<db_create>CREATE TABLE `test_table` ( `id` int(11) NOT NULL, `text` varchar(16384) CHARACTER SET utf8 NOT NULL )</db_create>
<db_drop>DROP TABLE IF EXISTS `test_table`</db_drop>

<custom_test><![CDATA[
global $sd_address, $sd_sphinxql_port, $g_locals;
$conn 		= @mysql_connect ( sprintf ( "%s:%s", $sd_address, $sd_sphinxql_port ) , $g_locals["db-user"], $g_locals["db-password"] , true );
$results  	= array();
$query 		= mysql_query('SHOW INDEX idx1 STATUS');
$results[] 	= implode(',', mysql_fetch_assoc($query));
$query 		= mysql_query('SHOW INDEX idx2 STATUS');
$results[] 	= mysql_error($conn); 

$config = file(testdir('config.conf'));
$updatedConfig = '';
foreach ( $config as $line ) {
	if ( strpos ( $line, 'index idx1') !== false) {
		$line = str_replace ('idx1', 'idx2', $line) ;
	}
	$updatedConfig .= $line;
}
file_put_contents(testdir('config.conf'), $updatedConfig);

shell_exec('pkill -SIGHUP  searchd');
sleep(1);
$query 		= mysql_query('SHOW INDEX idx2 STATUS');
$results[] 	= implode(',', mysql_fetch_assoc($query));
mysql_close($conn);
]]></custom_test>

</test>
