<?xml version="1.0" encoding="utf-8"?>
<test>

<requires>
<lemmatizer_base/>
</requires>

<name>aot morphology in utf-8</name>

<config>
common
{
	lemmatizer_base	= <local>lemmatizer_base</local>
}

searchd
{
	<searchd_settings/>
}

source test1
{
	type			= mysql
	<sql_settings/>
	sql_query_pre	= set names utf8
	sql_query		= select * from test_table
	sql_attr_uint	= gid
}

index test1
{
	source			= test1
	path			= <data_path/>/test1
	morphology		= lemmatize_ru_all
	blend_chars		= @, .
	wordforms		= <this_test/>/wordforms.txt
    charset_table   = 0..9, A..Z->a..z, _, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F, U+401->U+451, U+451
}

index test2 : test1
{
	path			= <data_path/>/test2
	morphology		= lemmatize_ru
}

index test3 : test1
{
	path			= <data_path/>/test3
	index_exact_words = 1
	morphology		= stem_en,lemmatize_ru_all
}

index test4 : test1
{
	path			= <data_path/>/test4
	index_exact_words = 1
	morphology		= lemmatize_en_all, stem_ru
}

index testrt1
{
	type			= rt
	path			= <data_path/>/testrt1
	morphology		= lemmatize_ru_all
	blend_chars		= @, .
	wordforms		= <this_test/>/wordforms.txt
	rt_attr_uint	= gid
	rt_field		= title
    charset_table   = 0..9, A..Z->a..z, _, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F, U+401->U+451, U+451
}

index testrt2 : testrt1
{
	path			= <data_path/>/testrt2
	morphology		= lemmatize_ru
}

source stalin_src
{
	type			= mysql
	<sql_settings/>
	sql_query_pre	= set names utf8
	sql_query		= select * from test_table where id=1000
	sql_attr_uint	= gid
}

index stalin_plain
{
	source			= stalin_src
	path			= <data_path/>/stalin_plain
	morphology		= lemmatize_ru
	min_infix_len	= 2
	expand_keywords	= 1
}

index stalin_rt
{
	type			= rt
	path			= <data_path/>/stalin_rt
	morphology		= lemmatize_ru_all
	dict			= keywords
	min_infix_len	= 2
	expand_keywords	= 1
	rt_field		= text
	rt_attr_uint	= gid
}

index crash_idx
{
	type			= rt
	path			= <data_path/>/crash_idx
	rt_field		= query
	rt_attr_bigint	= rating
	morphology		= stem_en, lemmatize_ru_all
	wordforms		= <this_test/>/wordforms2.txt
}

source test_wf
{
	type			= mysql
	<sql_settings/>
	sql_query_pre	= set names utf8
	sql_query		= select 1 id, 11 gid, 'камеди full source' AS text UNION select 2 id, 11 gid, 'comedi central' UNION select 3 id, 11 gid, 'pop idol'
	sql_attr_uint	= gid
}

index test_wf1
{
	source			= test_wf
	path			= <data_path/>/test_wf1
	morphology		= stem_en, lemmatize_ru_all
	wordforms		= <this_test/>/wordforms3.txt
	dict                = keywords
	min_prefix_len 		= 2
}
index test_wf2
{
	source			= test_wf
	path			= <data_path/>/test_wf2
	morphology		= stem_en, lemmatize_ru_all
	wordforms		= <this_test/>/wordforms3.txt
	dict                = keywords
}

source test_quorum
{
	type			= mysql
	<sql_settings/>
	sql_query_pre	= set names utf8
	sql_query		= select 1 id, 11 gid,'1' docid,  'Иван Иванович меняет песенка' text UNION select 2 id, 11 gid, '1' docid,  'Иванович песенка' text
	sql_attr_uint	= gid
}

index test_quorum
{
	source			= test_quorum
	path			= <data_path/>/test_quorum
	morphology		= lemmatize_ru_all
	dict                = keywords
	index_exact_words = 1
}

source test_lemmas
{
	type			= mysql
	<sql_settings/>
	sql_query_pre	= set names utf8
	sql_query		= select 1 id, 11 gid,'1' docid,  'так Иван Иванович меняет вот' title, 'Иван Иванович меняет вот' body
	sql_attr_uint	= gid
}

index test_lemmas
{
	source			= test_lemmas
	path			= <data_path/>/test_lemmas
	morphology		= lemmatize_ru_all
	dict            = keywords
}

source test_lemmas1
{
	type			= mysql
	<sql_settings/>
	sql_query_pre	= set names utf8
	sql_query		= select 1 id, 11 gid,'1' docid,  'так Иван Иванович меняет вот.да' title, 'Иван Иванович меняет вот.да' body
	sql_attr_uint	= gid
}

index test_lemmas1
{
	source			= test_lemmas1
	path			= <data_path/>/test_lemmas1
	morphology		= lemmatize_ru_all
	dict            = keywords
	blend_chars		= .
}

source test_lemmas2
{
	type			= mysql
	<sql_settings/>
	sql_query_pre	= set names utf8
	sql_query		= select 1 id, 11 gid,'1' docid,  'так Иван Иванович меняет да.вот' title, 'Иван Иванович меняет да.вот' body
	sql_attr_uint	= gid
}

index test_lemmas2
{
	source			= test_lemmas2
	path			= <data_path/>/test_lemmas2
	morphology		= lemmatize_ru_all
	dict            = keywords
	blend_chars		= .
}

source src_stop10
{
	type			= mysql
	<sql_settings/>
	sql_query		= SELECT 1, 11 as idd, 'поглазова ответы' as text UNION SELECT 2, 22 as idd, 'kPMHkQCFrL' as text
	sql_query_pre = SET NAMES utf8
	sql_attr_uint = idd
}

index test_stop10
{
	source			= src_stop10
	path			= <data_path/>/test_stop10
	dict			= keywords
	charset_table 	= 0..9, A..Z->a..z, _, ., -, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F, U+0401->U+0435, U+0451->U+0435
	morphology 		= lemmatize_ru_all, stem_enru
	index_exact_words = 1
}

source src_all11
{
	type			= mysql
	<sql_settings/>
	sql_query		= SELECT 1, 11 as idd, 'секс' as text UNION SELECT 2, 22 as idd, 'себульба' as text
	sql_query_pre = SET NAMES utf8
	sql_attr_uint = idd
}

index test_all11
{
	source			= src_all11
	path			= <data_path/>/test_all11
	dict			= keywords
	charset_table 	= 0..9, A..Z->a..z, _, ., -, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F, U+0401->U+0435, U+0451->U+0435
	morphology 		= lemmatize_ru_all, stem_enru
	min_prefix_len	= 2
	enable_star		= 1
}

source test_en_all
{
	type			= mysql
	<sql_settings/>
	sql_query_pre	= set names utf8
	sql_query		= select 1 id, 11 idd, 'told me stops' body
	sql_attr_uint	= idd
}


index test_en_all
{
	source			= test_en_all
	dict			= keywords
	path			= <data_path/>/test_en_all
	morphology		= lemmatize_en_all
}

index test_en_all1
{
	source			= test_en_all
	dict			= keywords
	path			= <data_path/>/test_en_all1
	morphology		= lemmatize_en_all
	index_exact_words = 1
}

source src_over
{
	type			= mysql
	<sql_settings/>
	sql_query		= SELECT 1, 11 as idd, 'Общиехарактеристикиизмерительногопреобразователя' as text UNION SELECT 2, 22 as idd, 'себульба' as text
	sql_query_pre = SET NAMES utf8
	sql_attr_uint = idd
}

index test_over
{
	source			= src_over
	path			= <data_path/>/test_over
	dict			= keywords
	charset_table 	= 0..9, A..Z->a..z, _, ., -, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F, U+0401->U+0435, U+0451->U+0435
	morphology 		= lemmatize_ru_all, stem_enru
    index_exact_words = 1
	min_word_len    = 1
	min_infix_len = 2
}

source src_multi_lem
{
	type			= mysql
	<sql_settings/>
	sql_query		= SELECT 1, 11 as idd, 'маленькие ноги' as text UNION SELECT 2, 22 as idd, 'маленькая нога' as text
	sql_query_pre = SET NAMES utf8
	sql_attr_uint = idd
}

index multi_lem11
{
	source			= src_multi_lem
	path			= <data_path/>/multi_lem11
	dict			= keywords
	charset_table 	= 0..9, A..Z->a..z, _, ., -, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F, U+0401->U+0435, U+0451->U+0435
	morphology 		= lemmatize_ru_all, lemmatize_en_all
    index_exact_words = 1
	min_word_len    = 1
}

index multi_lem12 : multi_lem11
{
	source			= src_multi_lem
	path			= <data_path/>/multi_lem12
	morphology 		= lemmatize_ru_all, lemmatize_en_all, lemmatize_de_all
}

index multi_lem2 : multi_lem11
{
	source			= src_multi_lem
	path			= <data_path/>/multi_lem2
	morphology 		= lemmatize_ru, lemmatize_en_all
}

index multi_lem3 : multi_lem11
{
	source			= src_multi_lem
	path			= <data_path/>/multi_lem3
	morphology 		= lemmatize_ru_all, lemmatize_en
}

</config>

<db_create>
CREATE TABLE test_table
(
	id INTEGER PRIMARY KEY NOT NULL,
	gid INTEGER NOT NULL,
	title VARCHAR(255) CHARACTER SET utf8 NOT NULL
);
</db_create>
<db_drop>DROP TABLE IF EXISTS test_table</db_drop>
<db_insert>SET NAMES utf8</db_insert>
<db_insert>INSERT INTO test_table VALUES
	( 1, 11, 'они стали есть' ),
	( 2, 11, 'Крыса из Нержавеющей Стали' ),
	( 3, 11, 'воруй@убивай' ),
	( 4, 11, 'воровал' ),
	( 5, 11, 'убиваю' ),
	( 6, 11, 'вокзал г.Зажопинска' ),
	( 7, 11, 'бросить бы все, да в Зажопинск' ),
	( 8, 11, 'Лучшая рыба это колбаса!' ),
	( 9, 11, 'косой шакал' ),
	( 10, 11, 'косая линия' ),
	( 11, 11, 'длинная коса' ),
	( 12, 11, 'для __лицо' ),
	( 13, 11, 'длить __лица' ),
	( 14, 11, 'глава12раздел' ),
	( 15, 11, 'попил клейстера' ),
	( 16, 11, 'понюхал клея' ),
	( 17, 11, 'Ё моё' ),
	( 18, 11, 'я санктение люблю спб' ),
	( 1000, 11, 'сталин начал курить' ),
	( 1001, 11, 'Фичин баг' ),
    ( 1002, 11, 'english text' )
</db_insert>
<metaindex name='META:plain'>
<index>test1</index>
<index>test2</index>
<index>test3</index>
</metaindex>

<queries>
<sphinxql>
	SELECT * FROM test1 WHERE MATCH('сталь');
	SELECT * FROM test1 WHERE MATCH('стать');

	SELECT * FROM test1 WHERE MATCH('сталью');
	SELECT * FROM test1 WHERE MATCH('стали');
	SELECT * FROM test1 WHERE MATCH('"они стали"');
	SELECT * FROM test1 WHERE MATCH('воруй@убивай');
	SELECT * FROM test1 WHERE MATCH('воровать');
	SELECT * FROM test1 WHERE MATCH('убивать');
	SELECT * FROM test1 WHERE MATCH('воруй');
	SELECT * FROM test1 WHERE MATCH('убивай');
	SELECT * FROM test1 WHERE MATCH('Зажопинск');
	SELECT * FROM test1 WHERE MATCH('Зажопинска');
	SELECT * FROM test1 WHERE MATCH('"вокзал г зажопинск"');
	SELECT * FROM test1 WHERE MATCH('рыба');
	SELECT * FROM test1 WHERE MATCH('селедка');
	SELECT * FROM test1 WHERE MATCH('косой');
	SELECT * FROM test1 WHERE MATCH('косая');
	SELECT * FROM test1 WHERE MATCH('для');
	SELECT * FROM test1 WHERE MATCH('длить');
	SELECT * FROM test1 WHERE MATCH('__лицо');
	SELECT * FROM test1 WHERE MATCH('__лица');
	SELECT * FROM test1 WHERE MATCH('глава12раздел');
	SELECT * FROM test1 WHERE MATCH('клейстеру');
	SELECT * FROM test1 WHERE MATCH('клей');
	SELECT * FROM test1 WHERE MATCH('ё');

	SELECT * FROM test2 WHERE MATCH('сталь');
	SELECT * FROM test2 WHERE MATCH('стать');
	SELECT * FROM test2 WHERE MATCH('сталью');
	SELECT * FROM test2 WHERE MATCH('стали');
	SELECT * FROM test2 WHERE MATCH('"они стали"');
	SELECT * FROM test2 WHERE MATCH('воруй@убивай');
	SELECT * FROM test2 WHERE MATCH('воровать');
	SELECT * FROM test2 WHERE MATCH('убивать');
	SELECT * FROM test2 WHERE MATCH('воруй');
	SELECT * FROM test2 WHERE MATCH('убивай');
	SELECT * FROM test2 WHERE MATCH('Зажопинск');
	SELECT * FROM test2 WHERE MATCH('Зажопинска');
	SELECT * FROM test2 WHERE MATCH('"вокзал г зажопинск"');
	SELECT * FROM test2 WHERE MATCH('рыба');
	SELECT * FROM test2 WHERE MATCH('селедка');
	SELECT * FROM test2 WHERE MATCH('косой');
	SELECT * FROM test2 WHERE MATCH('косая');
	SELECT * FROM test2 WHERE MATCH('для');
	SELECT * FROM test2 WHERE MATCH('длить');
	SELECT * FROM test2 WHERE MATCH('__лицо');
	SELECT * FROM test2 WHERE MATCH('__лица');
	SELECT * FROM test2 WHERE MATCH('глава12раздел');
	SELECT * FROM test2 WHERE MATCH('клейстеру');
	SELECT * FROM test2 WHERE MATCH('клей');
	SELECT * FROM test2 WHERE MATCH('ё');

	SELECT id,gid,weight() as my_weight FROM META:plain WHERE MATCH('Фичин баг') option ranker=SPH04;show meta;
	SELECT id,gid,weight() as my_weight FROM META:plain WHERE MATCH('Фичин баг');show meta;
	SELECT id,gid,weight() as my_weight FROM META:plain WHERE MATCH('^Фичин баг$');show meta;
	SELECT id,gid,weight(),packedfactors() as my_weight FROM META:plain WHERE MATCH('Фичин баг') option ranker=expr('sum((4*lcs+2*(min_hit_pos==1)+exact_hit)*user_weight)*1000+bm25');show meta;
	SELECT id,gid,weight(),packedfactors() as my_weight FROM META:plain WHERE MATCH('"Фичин баг"') option ranker=expr('sum((4*lcs+2*(min_hit_pos==1)+exact_hit)*user_weight)*1000+bm25');show meta;
	SELECT id,gid,weight(),packedfactors() as my_weight FROM META:plain WHERE MATCH('english text') option ranker=expr('sum((4*lcs+2*(min_hit_pos==1)+exact_hit)*user_weight)*1000+bm25');show meta;
	SELECT id,gid,weight(),packedfactors() as my_weight FROM META:plain WHERE MATCH('"english text"') option ranker=expr('sum((4*lcs+2*(min_hit_pos==1)+exact_hit)*user_weight)*1000+bm25');show meta;

	INSERT INTO testrt1 VALUES ( 1, 'они стали есть', 11 );
	INSERT INTO testrt1 VALUES ( 2, 'Крыса из Нержавеющей Стали', 11 );
	INSERT INTO testrt1 VALUES ( 3, 'воруй@убивай', 11 );
	INSERT INTO testrt1 VALUES ( 4, 'воровал', 11 );
	INSERT INTO testrt1 VALUES ( 5, 'убиваю', 11 );
	INSERT INTO testrt1 VALUES ( 6, 'вокзал г.Зажопинска', 11);
	INSERT INTO testrt1 VALUES ( 7, 'бросить бы все, да в Зажопинск', 11 );
	INSERT INTO testrt1 VALUES ( 8, 'Лучшая рыба это колбаса!', 11 );
	INSERT INTO testrt1 VALUES ( 9, 'косой шакал', 11 );
	INSERT INTO testrt1 VALUES ( 10, 'косая линия', 11 );
	INSERT INTO testrt1 VALUES ( 11, 'длинная коса', 11 );
	INSERT INTO testrt1 VALUES ( 12, 'для __лицо', 11 );
	INSERT INTO testrt1 VALUES ( 13, 'длить __лица', 11 );
	INSERT INTO testrt1 VALUES ( 14, 'глава12раздел', 11 );
	INSERT INTO testrt1 VALUES ( 15, 'попил клейстера', 11 );
	INSERT INTO testrt1 VALUES ( 16, 'понюхал клея', 11 );
	INSERT INTO testrt1 VALUES ( 17, 'Ё моё', 11 );
	INSERT INTO testrt1 VALUES ( 18, 'я санктение люблю спб', 11 );

	SELECT * FROM testrt1 WHERE MATCH('сталь');
	SELECT * FROM testrt1 WHERE MATCH('стать');
	SELECT * FROM testrt1 WHERE MATCH('сталью');
	SELECT * FROM testrt1 WHERE MATCH('стали');
	SELECT * FROM testrt1 WHERE MATCH('"они стали"');
	SELECT * FROM testrt1 WHERE MATCH('воруй@убивай');
	SELECT * FROM testrt1 WHERE MATCH('воровать');
	SELECT * FROM testrt1 WHERE MATCH('убивать');
	SELECT * FROM testrt1 WHERE MATCH('воруй');
	SELECT * FROM testrt1 WHERE MATCH('убивай');
	SELECT * FROM testrt1 WHERE MATCH('Зажопинск');
	SELECT * FROM testrt1 WHERE MATCH('Зажопинска');
	SELECT * FROM testrt1 WHERE MATCH('"вокзал г зажопинск"');
	SELECT * FROM testrt1 WHERE MATCH('рыба');
	SELECT * FROM testrt1 WHERE MATCH('селедка');
	SELECT * FROM testrt1 WHERE MATCH('косой');
	SELECT * FROM testrt1 WHERE MATCH('косая');
	SELECT * FROM testrt1 WHERE MATCH('для');
	SELECT * FROM testrt1 WHERE MATCH('длить');
	SELECT * FROM testrt1 WHERE MATCH('__лицо');
	SELECT * FROM testrt1 WHERE MATCH('__лица');
	SELECT * FROM testrt1 WHERE MATCH('глава12раздел');
	SELECT * FROM testrt1 WHERE MATCH('клейстеру');
	SELECT * FROM testrt1 WHERE MATCH('клей');
	SELECT * FROM testrt1 WHERE MATCH('ё');

	INSERT INTO testrt2 VALUES ( 1, 'они стали есть', 11 );
	INSERT INTO testrt2 VALUES ( 2, 'Крыса из Нержавеющей Стали', 11 );
	INSERT INTO testrt2 VALUES ( 3, 'воруй@убивай', 11 );
	INSERT INTO testrt2 VALUES ( 4, 'воровал', 11 );
	INSERT INTO testrt2 VALUES ( 5, 'убиваю', 11 );
	INSERT INTO testrt2 VALUES ( 6, 'вокзал г.Зажопинска', 11);
	INSERT INTO testrt2 VALUES ( 7, 'бросить бы все, да в Зажопинск', 11 );
	INSERT INTO testrt2 VALUES ( 8, 'Лучшая рыба это колбаса!', 11 );
	INSERT INTO testrt2 VALUES ( 9, 'косой шакал', 11 );
	INSERT INTO testrt2 VALUES ( 10, 'косая линия', 11 );
	INSERT INTO testrt2 VALUES ( 11, 'длинная коса', 11 );
	INSERT INTO testrt2 VALUES ( 12, 'для __лицо', 11 );
	INSERT INTO testrt2 VALUES ( 13, 'длить __лица', 11 );
	INSERT INTO testrt2 VALUES ( 14, 'глава12раздел', 11 );
	INSERT INTO testrt2 VALUES ( 15, 'попил клейстера', 11 );
	INSERT INTO testrt2 VALUES ( 16, 'понюхал клея', 11 );
	INSERT INTO testrt2 VALUES ( 17, 'Ё моё', 11 );
	INSERT INTO testrt2 VALUES ( 18, 'я санктение люблю спб', 11 );

	SELECT * FROM testrt2 WHERE MATCH('сталь');
	SELECT * FROM testrt2 WHERE MATCH('стать');
	SELECT * FROM testrt2 WHERE MATCH('сталью');
	SELECT * FROM testrt2 WHERE MATCH('стали');
	SELECT * FROM testrt2 WHERE MATCH('"они стали"');
	SELECT * FROM testrt2 WHERE MATCH('воруй@убивай');
	SELECT * FROM testrt2 WHERE MATCH('воровать');
	SELECT * FROM testrt2 WHERE MATCH('убивать');
	SELECT * FROM testrt2 WHERE MATCH('воруй');
	SELECT * FROM testrt2 WHERE MATCH('убивай');
	SELECT * FROM testrt2 WHERE MATCH('Зажопинск');
	SELECT * FROM testrt2 WHERE MATCH('Зажопинска');
	SELECT * FROM testrt2 WHERE MATCH('"вокзал г зажопинск"');
	SELECT * FROM testrt2 WHERE MATCH('рыба');
	SELECT * FROM testrt2 WHERE MATCH('селедка');
	SELECT * FROM testrt2 WHERE MATCH('косой');
	SELECT * FROM testrt2 WHERE MATCH('косая');
	SELECT * FROM testrt2 WHERE MATCH('для');
	SELECT * FROM testrt2 WHERE MATCH('длить');
	SELECT * FROM testrt2 WHERE MATCH('__лицо');
	SELECT * FROM testrt2 WHERE MATCH('__лица');
	SELECT * FROM testrt2 WHERE MATCH('глава12раздел');
	SELECT * FROM testrt2 WHERE MATCH('клейстеру');
	SELECT * FROM testrt2 WHERE MATCH('клей');
	SELECT * FROM testrt2 WHERE MATCH('ё');

	REPLACE INTO stalin_rt VALUES ( 1000, 'сталин начал курить', 11 );
	SELECT * FROM stalin_rt WHERE MATCH('стали');
	SELECT * FROM stalin_plain WHERE MATCH('стали');
	SELECT * FROM stalin_plain WHERE MATCH('стали') ORDER BY id ASC, gid ASC;

	<!--regression exact form vs missed lemma -->
	SELECT id,gid,weight() as my_weight FROM META:plain WHERE MATCH('=english =text') option ranker=sph04;show meta;
	SELECT id,gid,weight() as my_weight FROM test4 WHERE MATCH('клея') option ranker=sph04;show meta;
	SELECT id,gid,weight() as my_weight FROM test4 WHERE MATCH('=клея') option ranker=sph04;show meta;

	<!-- expand+remove quorum dupes test -->
	SELECT id FROM stalin_plain WHERE MATCH('"один два три"/0.5') limit 1;
	SHOW META;

	SELECT id FROM crash_idx WHERE MATCH('"DOG 13"');

	<!--regression wordforms at different stages vs AOT -->
	SELECT id,gid,weight() w FROM test_wf1 WHERE MATCH('камеди');show meta;
	SELECT id,gid,weight() w FROM test_wf2 WHERE MATCH('камеди');show meta;
	SELECT id,gid,weight() w FROM test_wf1 WHERE MATCH('comedi');show meta;
	SELECT id,gid,weight() w FROM test_wf2 WHERE MATCH('comedi');show meta;
	SELECT id,gid,weight() w FROM test_wf1 WHERE MATCH('pop');show meta;
	SELECT id,gid,weight() w FROM test_wf2 WHERE MATCH('pop');show meta;

	<!--regression quorum vs AOT -->
	SELECT id  FROM test_quorum WHERE MATCH(' "меняет песенка Иван"/2 (@docid 1)');show meta;

	SET profiling=1;
	SELECT id, WEIGHT() FROM test1 WHERE MATCH('^ попил $');;
	SHOW PLAN;;
	SELECT id, WEIGHT() FROM test1 WHERE MATCH('попил');;
	SHOW PLAN;;
	SELECT id, WEIGHT() FROM test1 WHERE MATCH('попил^1.234');;
	SHOW PLAN;;
	SELECT id, WEIGHT() FROM test1 WHERE MATCH('попил$^1.234');;
	SHOW PLAN;;
	SELECT id, WEIGHT() FROM test1 WHERE MATCH('попил^1.234$');;
	SHOW PLAN;;

	<!--regression lemmas vs tail hit -->
	SELECT *, weight() w FROM test_lemmas WHERE MATCH('вот'); show meta;
	SELECT *, weight() w FROM test_lemmas WHERE MATCH('@title вот'); show meta;
	SELECT *, weight() w FROM test_lemmas WHERE MATCH('@body вот'); show meta;
	SELECT *, weight() w FROM test_lemmas1 WHERE MATCH('вот'); show meta;
	SELECT *, weight() w FROM test_lemmas1 WHERE MATCH('@title вот'); show meta;
	SELECT *, weight() w FROM test_lemmas1 WHERE MATCH('@body вот'); show meta;
	SELECT *, weight() w FROM test_lemmas1 WHERE MATCH('вот.да'); show meta;
	SELECT *, weight() w FROM test_lemmas1 WHERE MATCH('(@title вот.да)'); show meta;
	SELECT *, weight() w FROM test_lemmas1 WHERE MATCH('(@body вот.да)'); show meta;
	SELECT *, weight() w FROM test_lemmas2 WHERE MATCH('вот'); show meta;
	SELECT *, weight() w FROM test_lemmas2 WHERE MATCH('@title вот'); show meta;
	SELECT *, weight() w FROM test_lemmas2 WHERE MATCH('@body вот'); show meta;
	SELECT *, weight() w FROM test_lemmas2 WHERE MATCH('да.вот'); show meta;
	SELECT *, weight() w FROM test_lemmas2 WHERE MATCH('(@title да.вот)'); show meta;
	SELECT *, weight() w FROM test_lemmas2 WHERE MATCH('(@body да.вот)'); show meta;

	<!-- regression exceptions vs no hits -->
	SELECT *, weight() w FROM test_stop10 WHERE MATCH('поглазова');
	SELECT *, weight() w FROM test_stop10 WHERE MATCH('kPMHkQCFrL');

	<!-- regression missed index_exact_words vs morphology and substring -->
	SELECT *, weight() w FROM test_all11 WHERE MATCH('се*'); show meta;
	SELECT *, weight() w FROM test_all11 WHERE MATCH('^се*'); show meta;

	<!-- regression missed index_exact_words vs lemmatizer_all -->
	SELECT id FROM test_en_all WHERE MATCH('told me'); show meta;
	SELECT id FROM test_en_all WHERE MATCH('=stops'); show meta;
	SELECT id FROM test_en_all WHERE MATCH('=stop'); show meta;
	SELECT id FROM test_en_all WHERE MATCH('stops'); show meta;
	SELECT id FROM test_en_all WHERE MATCH('stop'); show meta;
	SELECT id FROM test_en_all1 WHERE MATCH('=stops'); show meta;
	SELECT id FROM test_en_all1 WHERE MATCH('=stop'); show meta;
	SELECT id FROM test_en_all1 WHERE MATCH('stops'); show meta;
	SELECT id FROM test_en_all1 WHERE MATCH('stop'); show meta;

	<!-- regression form flag(exact) lost for lemmatizer sequence -->
	SELECT * FROM multi_lem11 WHERE MATCH('=маленькая');
	SELECT * FROM multi_lem11 WHERE MATCH('=маленькие');
	SELECT * FROM multi_lem12 WHERE MATCH('=маленькая');
	SELECT * FROM multi_lem12 WHERE MATCH('=маленькие');
	SELECT * FROM multi_lem2 WHERE MATCH('=маленькая');
	SELECT * FROM multi_lem2 WHERE MATCH('=маленькие');
	SELECT * FROM multi_lem3 WHERE MATCH('=маленькая');
	SELECT * FROM multi_lem3 WHERE MATCH('=маленькие');
</sphinxql>
</queries>

</test>
